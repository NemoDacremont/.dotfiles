#!/usr/bin/env python

import sys
import os
import re


transforms: dict[re.Pattern, str] = {
    re.compile('[\'",;!?(){}\\[\\]]'): '',
    re.compile(' +'): '_',
    re.compile('_+'): '_',
    re.compile('_+-_+'): '-',
    re.compile('_+-'): '-',
    re.compile('-_+'): '-',
    re.compile('é'): 'e',
    re.compile('è'): 'e',
    re.compile('ê'): 'e',
    re.compile('à'): 'a',
    re.compile('â'): 'a',
    re.compile('ù'): 'u',
    re.compile('ü'): 'u',
    re.compile('û'): 'u',
    re.compile('ï'): 'i',
    re.compile('î'): 'i',
    re.compile('ç'): 'c',
    re.compile('(?!\\w)', re.ASCII): ''
}


def format_basename(basename: str) -> str:
    out = basename

    for r in transforms:
        out = r.sub(transforms[r], out)

    return out.encode("ascii", errors="ignore").decode()


def rename_path(filepath: str) -> None:
    filepath = filepath.rstrip(os.sep)

    if (os.path.isdir(filepath)):
        for file in os.listdir(filepath):
            rename_path(os.path.join(filepath, file))

    if filepath != "." and os.path.exists(filepath):
        new_basename = format_basename(os.path.basename(filepath))

        new_dirname = ""
        if (os.path.dirname(filepath)):
            new_dirname = os.path.dirname(filepath)

        os.rename(filepath, os.path.join(new_dirname, new_basename))



if __name__ == "__main__":
    for argv in sys.argv[1:]:
        rename_path(argv)
